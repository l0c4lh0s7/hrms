{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/applicant/applicant.component.css","webpack:///./src/app/applicant/applicant.component.html","webpack:///./src/app/applicant/applicant.component.ts","webpack:///./src/app/commons/errors/app-error.ts","webpack:///./src/app/commons/errors/bad-input.ts","webpack:///./src/app/commons/errors/not-found-error.ts","webpack:///./src/app/commons/validators/email.validator.ts","webpack:///./src/app/commons/validators/name.validator.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/jobs/jobs.component.css","webpack:///./src/app/jobs/jobs.component.html","webpack:///./src/app/jobs/jobs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-allowed/not-allowed.component.css","webpack:///./src/app/not-allowed/not-allowed.component.html","webpack:///./src/app/not-allowed/not-allowed.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/service/AuthAccessGuard.service.ts","webpack:///./src/app/service/BasicAuthInterceptor.ts","webpack:///./src/app/service/applicant.service.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/job.service.ts","webpack:///./src/app/service/login.service.ts","webpack:///./src/app/service/register.service.ts","webpack:///./src/app/service/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hrms';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router'\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ApplicantService } from './service/applicant.service';\nimport { ApplicantComponent } from './applicant/applicant.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DataService } from './service/data.service';\nimport { RegisterService } from './service/register.service';\nimport { CustomEmailValidator } from './commons/validators/email.validator';\nimport { ValidationService } from './service/validation.service';\nimport { LoginService } from './service/login.service';\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { NotAllowedComponent } from './not-allowed/not-allowed.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { JobService } from './service/job.service';\nimport { AuthAccessService } from './service/AuthAccessGuard.service';\nimport { BasicAuthInterceptor } from './service/BasicAuthInterceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApplicantComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotAllowedComponent,\n    JobsComponent\n  ],\n  imports: [\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {\n        path: \"register\",\n        component:  RegisterComponent\n      }\n      ,\n      {\n        path: \"job\",\n        component: JobsComponent,\n        canActivate: [AuthAccessService]\n      },\n      {\n        path:'login',\n        component: LoginComponent\n      },\n      {\n        path:'home',\n        component: HomeComponent\n      },\n      {\n        path:'applicant',\n        component: ApplicantComponent,\n        canActivate: [AuthGuardService]\n      },\n      {\n        path: 'notallowed',\n        component: NotAllowedComponent,\n      }\n    ])\n\n  ],\n  providers: [\n              ApplicantService,\n              JobService,\n              LoginService,\n              AuthGuardService,\n              RegisterService,\n              DataService,\n              ValidationService,\n              CustomEmailValidator,\n              {provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true}\n            ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3> List of Applicants </h3>\\n<ul clas=\\\"list-group\\\">\\n<li class=\\\"list-group-item\\\" *ngFor=\\\"let applicant of applicants\\\">\\n<i class=\\\"fa fa-child\\\"></i>  {{ applicant.name }} - <h5>{{ applicant.qualification }}</h5>\\n</li>\\n  </ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApplicantService } from '../service/applicant.service';\n\n@Component({\n  selector: 'applicant',\n  templateUrl: './applicant.component.html',\n  styleUrls: ['./applicant.component.css']\n})\nexport class ApplicantComponent implements OnInit {\n\n  applicants: any\n  constructor(private service: ApplicantService) { }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(response=>{\n      this.applicants = response\n    }\n  )\n\n  }\n\n}\n","export class AppError{\r\n  constructor(  public originalError?: any){}\r\n}\r\n","import { AppError } from \"./app-error\";\r\n\r\nexport class BadInputError extends AppError{\r\n\r\n}\r\n","import { AppError } from \"./app-error\";\r\n\r\nexport class NotFoundError extends AppError{\r\n  \r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ValidationService } from \"../../service/validation.service\";\r\n\r\n\r\n@Injectable()\r\nexport class CustomEmailValidator{\r\n\r\n  constructor(public service : ValidationService){\r\n  console.log(service) }\r\n\r\n  emailTaken(control: AbstractControl) : any {\r\n      return new Promise(resolve=>{\r\n        setTimeout(()=>{\r\n          let valid = this.service.findByEmail(\"http://localhost:8080/validate/email\",control.value )\r\n          console.log(\"change \" + valid)\r\n          if( valid)\r\n            resolve ({ \"emailTaken\" : true })\r\n          else\r\n            resolve (null)\r\n        }, 1000)\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\n\r\nexport class NameValidator{\r\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null{\r\n    if( (control.value as string).indexOf(' ') > 0 )\r\n      return { cannotContainSpace : true }\r\n\r\n    return null\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h3> JOB PORTAL  </h3>\\n<ul clas=\\\"list-group\\\">\\n<li class=\\\"list-group-item\\\" *ngFor=\\\"let job of jobs\\\">\\n<i class=\\\"fa fa-star\\\"></i> Job for {{ job.position }} - <h5>Vacancies : {{ job.vacancies }}</h5>\\n</li>\\n  </ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { JobService } from '../service/job.service';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css']\n})\nexport class JobsComponent implements OnInit {\n\n  jobs : any\n  constructor(private service : JobService) { }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(response => {\n      this.jobs = response\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n<form [formGroup]=\\\"form\\\" id=\\\"Login\\\" method=\\\"post\\\">\\n        <div class=\\\"form-group\\\">\\n            <input formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"email\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && email.invalid\\\">\\n              <div *ngIf=\\\"email.errors.required\\\">email is required</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.touched && password.invalid\\\">\\n              <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\n            </div>\\n        </div>\\n        <div class=\\\"forgot\\\">\\n        <a href=\\\"#\\\">Forgot password?</a>\\n      </div>\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"Onsubmit()\\\">Login</button>\\n</form>\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register now </a>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  form: FormGroup\n  constructor(formBuilder: FormBuilder, private service: LoginService) {\n    this.form = formBuilder.group({\n      email: ['',Validators.required],\n      password: ['',Validators.required]\n    })\n  }\n\n  get email(){\n    return this.form.get('email')\n  }\n\n  get password(){\n    return this.form.get('password')\n  }\n\n  Onsubmit(){\n    let formattedData = this.formatLoginData(this.form.value)\n    console.log(formattedData)\n    let value = this.service.tryLogging(formattedData)\n    console.log('server response ' + value)\n  }\n\n  formatLoginData(inputData: JSON){\n    let pass = inputData[\"password\"]\n    delete inputData[\"password\"]\n    inputData[\"credential\"] = {\n      \"password\": pass\n    }\n    return inputData\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"home\\\">HRMS</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"applicant\\\" routerLinkActive=\\\"active\\\">Applicant</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"job\\\" routerLinkActive=\\\"active\\\">Jobs</a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">Contact</a>\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <button class=\\\"btn btn-primary\\\" routerLink=\\\"login\\\">Login/Register</button>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"https://github.com/l0c4lh0s7/hrms\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n      </a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-twitter\\\"></i>\\n      </a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-medium\\\"></i>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>You are not allowed to access this area </h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-allowed',\n  templateUrl: './not-allowed.component.html',\n  styleUrls: ['./not-allowed.component.css']\n})\nexport class NotAllowedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registrationForm\\\"  (ngSubmit) = \\\"onSubmit()\\\" method=\\\"post\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"firstName\\\">First Name: </label>\\r\\n  <input  type=\\\"text\\\"\\r\\n          name=\\\"firstName\\\"\\r\\n          id=\\\"firstName\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"firstName\\\">\\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"firstName.touched && firstName.invalid\\\">\\r\\n    <div *ngIf=\\\"firstName.errors.required\\\">firstName is a required Field</div>\\r\\n    <div *ngIf=\\\"firstName.errors.cannotContainSpace\\\">firstName cannot contain space </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"lastName\\\">last Name: </label>\\r\\n  <input  type=\\\"text\\\"\\r\\n          name=\\\"lastName\\\"\\r\\n          id=\\\"lastName\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"lastName\\\">\\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"lastName.touched && lastName.invalid\\\">\\r\\n    <div *ngIf=\\\"lastName.errors.required\\\">lastName is a required Field</div>\\r\\n    <div *ngIf=\\\"lastName.errors.cannotContainSpace\\\">lastName cannot contain space </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"qualification\\\">Qualification: </label>\\r\\n  <input  type=\\\"text\\\"\\r\\n          name=\\\"qualification\\\"\\r\\n          id=\\\"qualification\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"qualification\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"qualification.touched && qualification.invalid\\\">\\r\\n            <div *ngIf=\\\"qualification.errors.required\\\">Qualification is a required Field</div>\\r\\n          </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"email\\\">Email: </label>\\r\\n  <input  type=\\\"email\\\"\\r\\n          name=\\\"email\\\"\\r\\n          id=\\\"email\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"email\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && email.invalid\\\">\\r\\n            <div *ngIf=\\\"email.errors.required\\\">Email is a required Field</div>\\r\\n            <div *ngIf=\\\"email.errors.emailTaken\\\">This email is already registered, try loggin in </div>\\r\\n          </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\" >\\r\\n  <label for=\\\"dob\\\">Date of Birth: </label>\\r\\n  <input  type=\\\"date\\\"\\r\\n          name=\\\"dob\\\"\\r\\n          id=\\\"dob\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"dob\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"dob.touched && dob.invalid\\\">\\r\\n            <div *ngIf=\\\"dob.errors.required\\\">Dob is a required Field</div>\\r\\n          </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"experience\\\" min=\\\"0\\\" >Experience: </label>\\r\\n  <input  type=\\\"number\\\"\\r\\n          name=\\\"experience\\\"\\r\\n          id=\\\"experience\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"experience\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"experience.touched && experience.invalid\\\">\\r\\n            <div *ngIf=\\\"experience.errors.required\\\">Experience is a required Field</div>\\r\\n            <div *ngIf=\\\"experience.errors.min\\\">Must be a positive value</div>\\r\\n          </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"password\\\" minlength=\\\"8\\\">Password: </label>\\r\\n  <input  type=\\\"password\\\"\\r\\n          name=\\\"password\\\"\\r\\n          id=\\\"password\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"password\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.touched && password.invalid\\\">\\r\\n            <div *ngIf=\\\"password.errors.required\\\">Password is a required Field</div>\\r\\n            <div *ngIf=\\\"password.errors.cannotContainSpace\\\">password cannot contain space </div>\\r\\n            <div *ngIf=\\\"password.errors.minlength\\\">Must be atleast of 8 characters </div>\\r\\n            <div *ngIf=\\\"password.errors.pattern\\\">Password contains only alphabets, numbers and _ @ ! only and no special characters </div>\\r\\n          </div>\\r\\n  </div>\\r\\n\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"registrationForm.invalid\\\" > submit </button>\\r\\n\\r\\n\\r\\n\\r\\n  </form>\\r\\n\"","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { RegisterService } from '../service/register.service';\nimport { NameValidator } from '../commons/validators/name.validator';\nimport { CustomEmailValidator } from '../commons/validators/email.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n\n  registrationForm: FormGroup\n\n  constructor(formBuilder: FormBuilder, private service: RegisterService, emailValidator: CustomEmailValidator) {\n    this.registrationForm = formBuilder.group({\n      firstName: ['',[ Validators.required, NameValidator.cannotContainSpace]],\n      lastName: ['', [Validators.required, NameValidator.cannotContainSpace]],\n      qualification: ['', Validators.required],\n      email:  ['', [Validators.email, Validators.required], emailValidator.emailTaken.bind(emailValidator)],\n      dob:  ['', Validators.required],\n      experience: ['', [Validators.required, Validators.min(0)]],\n      password: ['', [Validators.required, NameValidator.cannotContainSpace, Validators.minLength(8), Validators.pattern(\"([a-zA-Z0-9_@!]*)\")]]\n    })\n  }\n\n\n  onSubmit(){\n    this.service.create(this.formatInputData(this.registrationForm.value)).subscribe()\n  }\n\n  formatInputData(inputData: JSON): JSON{\n    let password: string\n    let name: string\n    name = inputData[\"firstName\"] + \" \" + inputData[\"lastName\"]\n    for( let key in inputData){\n      if (key === \"password\" || key === \"firstName\" || key === \"lastName\"){\n        password = inputData[key]\n        delete inputData[key]\n      }\n    }\n    inputData[\"credential\"] = {\n      \"password\" : password\n    }\n    inputData[\"name\"] = name\n    return inputData\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName')\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName')\n  }\n\n  get qualification(){\n    return this.registrationForm.get('qualification')\n  }\n\n  get email(){\n    return this.registrationForm.get('email')\n  }\n\n  get dob(){\n    return this.registrationForm.get('dob')\n  }\n\n  get experience(){\n    return this.registrationForm.get('experience')\n  }\n\n  get password(){\n    return this.registrationForm.get('password')\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthAccessService implements CanActivate{\r\n\r\n  constructor(private loginService: LoginService,\r\n              private router: Router) { }\r\n\r\n  canActivate() : boolean {\r\n    if( this.loginService.loggedIn() )\r\n      return true;\r\n    else{\r\n      this.router.navigate(['/login'])\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"../../../node_modules/@angular/common/http\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { Injectable } from \"../../../node_modules/@angular/core\";\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor{\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let username=\"admin@admin.com\"\r\n    let password = \"admin\"\r\n    request = request.clone({\r\n      setHeaders:{\r\n        Authorization:  'Basic ' + btoa(username + ':' + password)\r\n      }\r\n    })\r\n    return next.handle(request)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { DataService } from './data.service';\n// import { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicantService extends DataService {\n\n  constructor(http: HttpClient) {\n    super( \"http://localhost:8080/user/list\", http)\n   }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private loginService: LoginService,\n              private router: Router) { }\n\n  canActivate() : boolean {\n    if( this.loginService.loggedInAsAdmin() )\n      return true;\n    else{\n      this.router.navigate(['/login'])\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { BadInputError } from '../commons/errors/bad-input';\nimport { throwError } from 'rxjs';\nimport { AppError } from '../commons/errors/app-error';\nimport { NotFoundError } from '../commons/errors/not-found-error';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private url: string, private http: HttpClient) { }\n\n  getAll(){\n    return this.http.get(this.url)\n      .pipe(\n              map((response: Response)=> response),\n              catchError(this.handleError)\n            )\n  }\n\n  delete(resource){\n    return this.http.delete(this.url + '/' + resource.id).pipe(\n      map((response: Response) => response.json()) ,\n      catchError(this.handleError))\n  }\n\n  update(resource){\n    return this.http.patch(this.url + '/' + resource.id,\n     JSON.stringify({isRead:true}))\n    .pipe(map((response: Response) => response.json()) ,\n    catchError(this.handleError))\n    // this.http.put(this.url, JSON.stringify(resource))\n  }\n\n  create(resource){\n    return this.http.post(this.url, JSON.stringify(resource)).pipe(\n      map((response: Response) => response.json()) ,\n      catchError(this.handleError))\n  }\n\n\n  private handleError(error: Response){\n    if(error.status === 400)\n      return throwError(new BadInputError(error))\n    if( error.status === 404 )\n      return throwError(new NotFoundError())\n    else\n      return throwError(new AppError(error))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService extends DataService{\n\n  constructor(http: HttpClient) {\n    super(\"http://localhost:8080/job\", http);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as JWT from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService{\n\n  url = \"http://localhost:8080/login\"\n  constructor(private http: HttpClient) {\n  }\n\n  tryLogging(credential){\n    return this.http.post(this.url, credential, {responseType: 'text', observe: 'response'})\n      .subscribe(response=>{\n        const token = response.headers.get('Authorization')\n        localStorage.setItem('token', token)\n        let decodedToken: Token = JWT(token)\n        console.log(decodedToken.admin )\n        console.log(response)\n        return response\n      },\n    error=>{\n      console.log(error)\n      return error\n    })\n  }\n\n\n  loggedIn(): boolean{\n    return !!this.getToken()\n  }\n\n  loggedInAsAdmin(): boolean{\n    let token: Token\n    try{\n    token = JWT(this.getToken())\n    }\n    catch(InvalidTokenError){\n      console.log(\"Api is not logged in yet\")\n      return false;\n    }\n    return token.admin\n  }\n\n  getToken(){\n    return localStorage.getItem('token')\n  }\n\n}\n\ninterface Token {\n   admin:boolean,\n   subject:string,\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService extends DataService{\n  constructor(http: HttpClient) {\n    super('http://localhost:8080/user/register', http);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '../../../node_modules/@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n  valid\n  constructor(private http: HttpClient) { }\n\n  findByEmail(url: string,email: string){\n    return this.http.get(url + \"?email=\" + email)\n      .subscribe(response =>{\n        this.valid = response\n        console.log(response);\n         return response;\n      })\n    //   console.log('after subscribe ' + this.valid)\n    // return this.valid\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}