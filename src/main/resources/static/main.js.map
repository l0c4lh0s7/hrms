{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/applicant/applicant.component.css","webpack:///./src/app/applicant/applicant.component.html","webpack:///./src/app/applicant/applicant.component.ts","webpack:///./src/app/commons/errors/app-error.ts","webpack:///./src/app/commons/errors/bad-input.ts","webpack:///./src/app/commons/errors/not-found-error.ts","webpack:///./src/app/commons/validators/email.validator.ts","webpack:///./src/app/commons/validators/name.validator.ts","webpack:///./src/app/create-job/create-job.component.css","webpack:///./src/app/create-job/create-job.component.html","webpack:///./src/app/create-job/create-job.component.ts","webpack:///./src/app/create-user/create-user.component.css","webpack:///./src/app/create-user/create-user.component.html","webpack:///./src/app/create-user/create-user.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/job/job.component.css","webpack:///./src/app/job/job.component.html","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/jobs/jobs.component.css","webpack:///./src/app/jobs/jobs.component.html","webpack:///./src/app/jobs/jobs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-allowed/not-allowed.component.css","webpack:///./src/app/not-allowed/not-allowed.component.html","webpack:///./src/app/not-allowed/not-allowed.component.ts","webpack:///./src/app/not-logged-in/not-logged-in.component.css","webpack:///./src/app/not-logged-in/not-logged-in.component.html","webpack:///./src/app/not-logged-in/not-logged-in.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/service/AuthAccess.service.ts","webpack:///./src/app/service/BasicAuthInterceptor.ts","webpack:///./src/app/service/applicant.service.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/job.service.ts","webpack:///./src/app/service/login.service.ts","webpack:///./src/app/service/register.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/service/validation.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hrms';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router'\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ApplicantService } from './service/applicant.service';\nimport { ApplicantComponent } from './applicant/applicant.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DataService } from './service/data.service';\nimport { RegisterService } from './service/register.service';\nimport { CustomEmailValidator } from './commons/validators/email.validator';\nimport { ValidationService } from './service/validation.service';\nimport { LoginService } from './service/login.service';\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { NotAllowedComponent } from './not-allowed/not-allowed.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { JobService } from './service/job.service';\nimport { AuthAccessService } from './service/AuthAccess.service';\nimport { BasicAuthInterceptor } from './service/BasicAuthInterceptor';\nimport { NotLoggedInComponent } from './not-logged-in/not-logged-in.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { JobComponent } from './job/job.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { UserComponent } from './user/user.component';\nimport { CreateJobComponent } from './create-job/create-job.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { UserService } from './service/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApplicantComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotAllowedComponent,\n    JobsComponent,\n    NotLoggedInComponent,\n    DashboardComponent,\n    JobComponent,\n    NotfoundComponent,\n    UserComponent,\n    CreateJobComponent,\n    CreateUserComponent\n  ],\n  imports: [\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n      // AuthAccessService : means you must be logged in\n      // AuthGuardService :  means you must be admin \n      {\n        path: 'createUser',\n        component:  CreateUserComponent,\n        canActivate:  [AuthAccessService, AuthGuardService]\n      },\n      {\n        path: 'createJob',\n        component:  CreateJobComponent,\n        canActivate:  [AuthAccessService, AuthGuardService]\n      },\n      {\n        path: \"user/:id\",\n        component:  UserComponent\n      },\n      {\n        path: \"job/:id\", \n        component:  JobComponent,\n        canActivate:  [AuthAccessService]\n      },\n      {\n        path: \"register\",\n        component:  RegisterComponent\n      },\n      {\n        path: \"dashboard\",\n        component:  DashboardComponent,\n        canActivate:  [AuthAccessService, AuthGuardService]\n      }\n      ,\n      {\n        path: \"jobs\",\n        component: JobsComponent,\n        canActivate: [AuthAccessService]\n      },\n      {\n        path: 'notLoggedIn',\n        component: NotLoggedInComponent\n      },\n      {\n        path:'login',\n        component: LoginComponent\n      },\n      {\n        path:'',\n        component: HomeComponent\n      },\n      {\n        path: 'home',\n        component:  HomeComponent\n      },\n      {\n        path:'applicant',\n        component: ApplicantComponent,\n        canActivate: [AuthAccessService, AuthGuardService]\n      },\n      {\n        path: 'notallowed',\n        component: NotAllowedComponent,\n      },\n      {\n        path: \"**\",\n        component:  NotfoundComponent\n      }\n    ])\n\n  ],\n  providers: [UserService,\n              ApplicantService,\n              JobService,\n              LoginService,\n              AuthGuardService,\n              RegisterService,\n              DataService,\n              ValidationService,\n              CustomEmailValidator,\n              {provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true}\n            ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".fa.fa-user-circle-o{\\r\\n  font-size: 48px;\\r\\n}\\r\\n.container{\\r\\n    padding:5%;\\r\\n}\\r\\n.container .img{\\r\\n    text-align:center;\\r\\n}\\r\\n.container .details{\\r\\n    border-left:3px solid #ded4da;\\r\\n}\\r\\n.container .details p{\\r\\n    font-size:15px;\\r\\n    font-weight:bold;\\r\\n}\\r\\n.row{\\r\\n  padding: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Users</h2>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\" *ngFor=\\\"let applicant of applicants\\\">\\n      <div class=\\\"col-md-6 img\\\">\\n        <i class=\\\"fa fa-user-circle-o\\\"></i>\\n      </div>\\n      <div class=\\\"col-md-6 details\\\">\\n        <blockquote>\\n          <h5>{{ applicant.name }}</h5>\\n          <small><cite title=\\\"Source Title\\\">{{ applicant.qualification }}  <i class=\\\"icon-map-marker\\\"></i></cite></small>\\n        </blockquote>\\n        <p>\\n          {{ applicant.dob }}\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApplicantService } from '../service/applicant.service';\n\n@Component({\n  selector: 'applicant',\n  templateUrl: './applicant.component.html',\n  styleUrls: ['./applicant.component.css']\n})\nexport class ApplicantComponent implements OnInit {\n\n  applicants: any\n  constructor(private service: ApplicantService) { }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(response=>{\n      this.applicants = response\n    }\n  )\n\n  }\n\n}\n","export class AppError{\r\n  constructor(  public originalError?: any){}\r\n}\r\n","import { AppError } from \"./app-error\";\r\n\r\nexport class BadInputError extends AppError{\r\n\r\n}\r\n","import { AppError } from \"./app-error\";\r\n\r\nexport class NotFoundError extends AppError{\r\n  \r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ValidationService } from \"../../service/validation.service\";\r\n\r\n\r\n@Injectable()\r\nexport class CustomEmailValidator{\r\n\r\n  constructor(public service : ValidationService){\r\n  console.log(service) }\r\n\r\n  emailTaken(control: AbstractControl) : any {\r\n      return new Promise(resolve=>{\r\n        setTimeout(()=>{\r\n          let valid = this.service.findByEmail(\"http://localhost:8080/validate/email\",control.value )\r\n          if(valid)\r\n            resolve({'emailTaken' : true})\r\n          else\r\n            resolve(null)\r\n        }, 1000)\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\n\r\nexport class NameValidator{\r\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null{\r\n    if( (control.value as string).indexOf(' ') > 0 )\r\n      return { cannotContainSpace : true }\r\n\r\n    return null\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row m-y-2\\\">\\n      <!-- edit form column -->\\n      <div class=\\\"col-lg-10 text-lg-center\\\">\\n          <h2>Create Job</h2>\\n      </div>\\n      <div class=\\\"col-lg-10\\\">\\n          <form role=\\\"form\\\" [formGroup]=\\\"jobCreationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Position</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"position\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Vacancies</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"vacancies\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Filled</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"filled\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Description</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <textarea class=\\\"form-control\\\" rows=\\\"10\\\" cols=\\\"30\\\" formControlName=\\\"description\\\"></textarea>\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">CTC(Cost To Company)</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\"  formControlName=\\\"ctc\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Active</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"isActive\\\" value=\\\"true\\\"\\n                                  formControlName=\\\"isActive\\\">Yes\\n                          </label>\\n                      </div>\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"isActive\\\" value=\\\"false\\\"\\n                                  formControlName=\\\"isActive\\\">No\\n                          </label>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Bond</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"bond\\\" value=\\\"true\\\"\\n                                  formControlName=\\\"bond\\\">Yes\\n                          </label>\\n                      </div>\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"bond\\\" value=\\\"false\\\"\\n                                  formControlName=\\\"bond\\\">No\\n                          </label>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Bond Years</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"bond_years\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\"></label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <Button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\" style=\\\"margin: 10px\\\">Cancel</Button>\\n                      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Create\\\" style=\\\"margin: 10px\\\">\\n                  </div>\\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n</div> \\n<hr />\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { JobService } from '../service/job.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'create-job',\n  templateUrl: './create-job.component.html',\n  styleUrls: ['./create-job.component.css']\n})\nexport class CreateJobComponent implements OnInit {\n\n  jobCreationForm: FormGroup\n  constructor(formBuilder: FormBuilder, private jobService: JobService, private router: Router) { \n    this.jobCreationForm = formBuilder.group({\n        position: ['',[Validators.required]],\n        vacancies:  ['',[Validators.required]], \n        filled: ['',[Validators.required]],\n        description:  ['',[Validators.required]],\n        ctc:  ['',[Validators.required]],\n        bond: ['',[Validators.required]],\n        bond_years: ['',[Validators.required]],\n        isActive: ['',[Validators.required]]\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    let data = this.jobCreationForm.value\n    this.jobService.createJob(data).subscribe(response=>{\n      console.log('response: ' + response)\n    })\n    this.router.navigate(['/dashboard'])\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row m-y-2\\\">\\n      <!-- edit form column -->\\n      <div class=\\\"col-lg-10 text-lg-center\\\">\\n          <h2>Create New User</h2>\\n      </div> \\n      <div class=\\\"col-lg-10\\\">\\n          <form role=\\\"form\\\" [formGroup]=\\\"createUserForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Name</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Email</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"email\\\" formControlName=\\\"email\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">DOB</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"date\\\" formControlName=\\\"dob\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Experience</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"experience\\\" />\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Admin</label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"isAdmin\\\" value=\\\"true\\\"\\n                                  formControlName=\\\"isAdmin\\\">Yes\\n                          </label>\\n                      </div>\\n                      <div class=\\\"form-check-inline\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"isAdmin\\\" value=\\\"false\\\"\\n                                  formControlName=\\\"isAdmin\\\">No\\n                          </label>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Password</label>\\n                <div class=\\\"col-lg-9\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"newPassword\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Confirm Password</label>\\n                <div class=\\\"col-lg-9\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" />\\n                </div>\\n            </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-lg-3 col-form-label form-control-label\\\"></label>\\n                  <div class=\\\"col-lg-9\\\">\\n                      <Button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\" style=\\\"margin: 10px\\\">Cancel</Button>\\n                      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Create user\\\" style=\\\"margin: 10px\\\">\\n                  </div>\\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n</div>\\n<hr />\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  createUserForm: FormGroup\n  constructor(formBuilder: FormBuilder, private router: Router, private userService:  UserService) {\n    this.createUserForm = formBuilder.group({\n      newPassword : ['',[Validators.required]],\n      confirmPassword:  ['',[Validators.required]],\n      qualification:  ['',[Validators.required]],\n      id: ['',[Validators.required]],\n      name: ['',[Validators.required]],\n      email:  ['',[Validators.required]],\n      dob:  ['',[Validators.required]],\n      experience: ['',[Validators.required]],\n      isAdmin: ['',[Validators.required]]\n    })\n   }\n\n  ngOnInit() {\n  }\n\n  \nonSubmit(){\n  console.log(\"New user created : \")\n  this.userService.createUser(this.formatInputData(this.createUserForm.value)).subscribe()\n  this.router.navigate(['/dashboard'])\n}\n\nformatInputData(data): JSON{\n  let pass = data['newPassword']\n  delete data['newPassword']\n  delete data['confirmPassword']\n  data['credential'] = {\n    'password': pass \n  }\n  return data\n}\n\n}\n","module.exports = \".card{\\r\\n    box-shadow: 2px 2px 10px #DADADA;\\r\\n    margin: 5px;\\r\\n    padding: 20px 10px;\\r\\n    background-color: #fff;\\r\\n    height: 100px;\\r\\n    border-radius: 5px;\\r\\n    transition: .3s linear all;\\r\\n    height: 300px;\\r\\n  }\\r\\n\\r\\n  .card:hover{\\r\\n    box-shadow: 4px 4px 90px #DADADA;\\r\\n    transition: .3s linear all;\\r\\n  }\\r\\n\\r\\n  .hidden{\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .full{\\r\\n    height: -webkit-fit-content;\\r\\n    height: -moz-fit-content;\\r\\n    height: fit-content;\\r\\n  }\\r\\n\\r\\n  .child-i{\\r\\n    margin: 10px;\\r\\n  }\\r\\n\\r\\n  .custom-link{\\r\\n    color:green;\\r\\n     cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .card.change-i i{\\r\\n    font-size: 5em;\\r\\n    top: 20%;\\r\\n    bottom: 20%;\\r\\n    opacity: 0.2;\\r\\n  }\\r\\n\\r\\n  /* .card.primary{\\r\\n    background-color: #007bff;\\r\\n    color: #FFF;\\r\\n  }\\r\\n\\r\\n  .card.info{\\r\\n    background-color: #26c6da;\\r\\n    color: #FFF;\\r\\n  }   */\\r\\n\\r\\n  /* .card .count-numbers{\\r\\n    position: absolute;\\r\\n    right: 35px;\\r\\n    top: 20px;\\r\\n    font-size: 32px;\\r\\n    display: block;\\r\\n    cursor: pointer;\\r\\n  } */\\r\\n\\r\\n  /* .card .count-name{\\r\\n    position: absolute;\\r\\n    right: 35px;\\r\\n    bottom: 20px;\\r\\n    font-style: italic;\\r\\n    text-transform: capitalize;\\r\\n    opacity: 0.5;\\r\\n    display: block;\\r\\n    color: black;\\r\\n    font-weight: bolder;\\r\\n    font-size: 18px;\\r\\n  } */\\r\\n\\r\\n \"","module.exports = \"<h1 style=\\\"text-align:center\\\">DASHBOARD</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <div class=\\\"container card full\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-10\\\">\\n              <h2>Jobs </h2>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n                <span class=\\\"custom-link\\\"><i class=\\\"fa fa-plus\\\" (click)=\\\"addnewJob()\\\">Add</i></span>\\n            </div>\\n          </div>\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let job of jobs \\\">\\n              <p>\\n                <i class=\\\"fa fa-file\\\"></i> Job for <strong>{{ job.position }}</strong> ,\\n                Vacancies - <strong>{{ job.vacancies }}</strong>\\n                <button class=\\\"btn btn-primary btn-xs float-right child-i\\\" (click)=\\\"editJob(job.id)\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                <button class=\\\"btn btn-danger btn-xs float-right child-i\\\" (click)=\\\"deleteJob(job.id)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n                <br><span class=\\\"custom-link\\\" (click)=\\\"listAppliedCandidate(job.id)\\\">List of applied Candidates</span>\\n              </p>\\n                <ul *ngIf=\\\"selectedJobId == job.id\\\">\\n                  <li *ngFor=\\\"let user of userList\\\">\\n                    <i class=\\\"fa fa-user\\\"></i>\\n                    <a [routerLink]=\\\"['/user',user.id]\\\">{{ user.name }}</a>\\n                  </li>\\n                </ul>\\n            </li>\\n          </ul>\\n        </div>\\n  </div>\\n  \\n\\n  <div class=\\\"col-md-6\\\">\\n      <div class=\\\"container card full\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-10\\\">\\n              <h2>Users </h2>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n              <span class=\\\"custom-link\\\" (click)=\\\"addnewUser()\\\"><i class=\\\"fa fa-plus\\\" >Add</i></span>\\n            </div>\\n          </div>\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of users \\\">\\n              <p><i class=\\\"fa fa-user\\\"></i> <strong>{{ user.name }}</strong>\\n                <button class=\\\"btn btn-primary btn-xs float-right child-i\\\" (click)=\\\"editUser(user.id)\\\">\\n                  <i class=\\\"fa fa-pencil\\\"></i></button>\\n                <button class=\\\"btn btn-danger btn-xs float-right child-i\\\" (click)=\\\"deleteUser(user.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i></button>\\n                <br><span class=\\\"custom-link\\\" (click)=\\\"listAppliedJob(user.id)\\\">List of applied Jobs</span>\\n              </p>\\n              <ul *ngIf=\\\"selectedUserId == user.id\\\">\\n                <li *ngFor=\\\"let job of jobList\\\">\\n                  <i class=\\\"fa fa-file\\\"></i>\\n                  <a [routerLink]=\\\"['/job',job.id]\\\">Applied for {{ job.position }}</a>\\n                </li>\\n              </ul>\\n            </li>\\n          </ul>\\n        </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { JobService } from '../service/job.service';\nimport { ApplicantService } from '../service/applicant.service';\nimport { Router } from '@angular/router';\nimport { USER, JOB } from '../commons/interfaces/interfaces';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  jobs: JOB[]\n  numJobs\n  numUsers\n  users: USER[]\n  showJob:boolean\n  showUser:boolean\n  selectedJobId: number \n  selectedUserId: number\n  userList: any \n  jobList: any\n  constructor(private jobService: JobService, \n              private userService:ApplicantService,\n              private router: Router\n              ) {   }\n\n  ngOnInit() {\n    this.jobService.getAll().subscribe(response=>{\n      this.jobs = response as any as JOB[]\n      this.numJobs = this.jobs.length\n    })\n    this.userService.getAll().subscribe(response=>{\n      this.users = response as any as USER[]\n      this.numUsers = this.users.length\n    })\n    this.showJob = true\n    this.showUser = true\n  }\n\n  showJobs(){\n    this.showJob = this.toggle(this.showJob)\n    this.showUser = false\n  }\n\n  showUsers(){\n    this.showUser = this.toggle(this.showUser)\n    this.showJob = false\n  }\n\n  listAppliedCandidate(jobId){\n    console.log(\"list is clicked for jobId : \" + jobId)\n    this.selectedJobId = jobId\n    this.jobService.getAppliedCandidates(jobId).subscribe(response=>{\n      this.userList = response \n    })\n  }\n\n  addnewJob(){\n    console.log(\"new job add \")\n    this.router.navigate(['/createJob'])\n  }\n  \n  editJob(jobId){\n    console.log(\"jobId : \" + jobId )\n    this.router.navigate(['/job', jobId])\n  }\n\n  deleteJob(jobId){\n    console.log(\"deleting job with id : \" + jobId)\n    this.jobService.delete(jobId).subscribe(()=>{\n      for( let i = this.jobs.length-1; i--;){\n        if ( this.jobs[i].id === jobId) this.jobs.splice(i, 1);\n        }\n    })\n    this.router.navigate([''])\n  }\n\n  addnewUser(){\n    console.log(\"Add a new user \")\n    this.router.navigate(['/createUser'])\n  }\n\n  editUser(userId){\n    console.log(\"userId : \" + userId)\n    this.router.navigate(['/user',userId])\n  }\n\n  deleteUser(userId){\n    console.log('deleting user with userId : ' + userId)\n    this.userService.delete(userId).subscribe(()=>{\n      for( let i = this.users.length-1; i--;){\n        if ( this.users[i].id === userId) this.users.splice(i, 1);\n        }\n    })\n    this.router.navigate([''])\n  }\n\n  listAppliedJob(userId){\n    this.selectedUserId = userId \n    this.userService.getAppliedJobs(userId).subscribe(response=>{\n      this.jobList = response \n    })\n  }\n\n  toggle(variable){\n    return !variable\n  }\n}\n","module.exports = \"h2{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2> Humar Resource Management System </h2>\\n  <h5 *ngIf=\\\"userName != null\\\"> Welcome : <strong>{{ userName }}</strong></h5>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userName: string\n  isAdmin: boolean\n  constructor(loginService: LoginService, private router: Router) {\n    let decoded = loginService.decodedToken()\n    let isToken = !!decoded\n    if( isToken ){\n      this.userName = decoded.name\n      this.isAdmin = decoded.admin\n    }\n    else{\n      this.userName = null\n    }\n  }\n\n  ngOnInit() {\n    if( this.isAdmin ){\n      this.router.navigate(['dashboard'])\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row m-y-2\\\">\\n        <!-- edit form column -->\\n        <div class=\\\"col-lg-10 text-lg-center\\\">\\n            <h2>Job Details</h2>\\n        </div>\\n        <div class=\\\"col-lg-8\\\" *ngIf=\\\"!job?.active\\\">\\n            <div class=\\\"alert alert-danger alert-dismissable\\\"> <a class=\\\"panel-close close\\\" data-dismiss=\\\"alert\\\">×</a>\\n                <strong>Important </strong>This job is not active ..\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-10\\\">\\n            <form role=\\\"form\\\" [formGroup]=\\\"jobEditForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Position</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"job.position\\\" formControlName=\\\"position\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Vacancies</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [value]=\\\"job.vacancies\\\" formControlName=\\\"vacancies\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Filled</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [value]=\\\"job.filled\\\" formControlName=\\\"filled\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Description</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <textarea class=\\\"form-control\\\" rows=\\\"10\\\" cols=\\\"30\\\" formControlName=\\\"description\\\">{{ job.description }}</textarea>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">CTC(Cost To Company)</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"job.ctc\\\" formControlName=\\\"ctc\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Active</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"isActive\\\" value=\\\"true\\\"\\n                                    formControlName=\\\"isActive\\\" [checked]=\\\"job.isActive\\\">Yes\\n                            </label>\\n                        </div>\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"isActive\\\" value=\\\"false\\\"\\n                                    formControlName=\\\"isActive\\\" [checked]=\\\"!job.isActive\\\">No\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Bond</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"bond\\\" value=\\\"true\\\"\\n                                    formControlName=\\\"bond\\\" [checked]=\\\"job.bond\\\">Yes\\n                            </label>\\n                        </div>\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"bond\\\" value=\\\"false\\\"\\n                                    formControlName=\\\"bond\\\" [checked]=\\\"!job.bond\\\">No\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Bond Years</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [value]=\\\"job.bond_years\\\" formControlName=\\\"bond_years\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\"></label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <Button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\" style=\\\"margin: 10px\\\">Cancel</Button>\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Save Changes\\\" style=\\\"margin: 10px\\\">\\n                        <i class=\\\"fa fa-check\\\" style=\\\"color: green\\\" *ngIf=\\\"changesSaved\\\">Values Updated</i>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n<hr />\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { JOB } from '../commons/interfaces/interfaces'\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent implements OnInit {\n\n  url\n  job: JOB\n  a \n  jobEditForm: FormGroup\n  changesSaved: boolean\n  constructor(formBuilder: FormBuilder, private route: ActivatedRoute, private http: HttpClient , private router: Router) {\n    this.route.params.subscribe( params => {\n      this.url = 'http://localhost:8080/job/' + params.id      \n    })\n    \n    this.http.get(this.url).subscribe(response => {\n      this.a = response\n      this.job = this.a\n\n      this.jobEditForm = formBuilder.group({\n        id : [this.job.id],\n        position: [this.job.position],\n        vacancies:  [this.job.vacancies], \n        filled: [this.job.filled],\n        description:  [this.job.description],\n        ctc:  [this.job.ctc],\n        bond: [this.job.bond],\n        bond_years: [this.job.bond_years],\n        applied_to_id: [this.job.applied_to_id],\n        interviewer_id: [this.job.interviewer_id],\n        isActive: [this.job.isActive]\n      })\n\n    })\n\n    \n   }\n\n  ngOnInit() {\n  }\n\n  cancel(){\n    console.log('cancel is clicked and called ')\n    this.router.navigate([''])\n  }\n\n  onSubmit(){\n    console.log(\"Save changes is clicked and called \")\n    this.http.put(\"http://localhost:8080/job/update\", this.jobEditForm.value)\n      .subscribe(response => {\n        console.log(\"backend response : \" + response)\n      },\n      error=>{\n        console.log(\"error  : \" + error)\n      })\n    console.log(\"Made a put call to the server with these values : \" + this.jobEditForm.value)\n\n    this.changesSaved = true\n    setTimeout(()=>{\n      this.changesSaved = false\n    }, 5000)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h3> JOB PORTAL  </h3>\\n<ul class=\\\"list-group\\\">\\n<li class=\\\"list-group-item\\\" *ngFor=\\\"let job of jobs\\\">\\n<i class=\\\"fa fa-star\\\"></i> Job for {{ job.position }} - <h5>Vacancies : {{ job.vacancies }}</h5>\\n</li>\\n  </ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { JobService } from '../service/job.service';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css']\n})\nexport class JobsComponent implements OnInit {\n\n  jobs : any\n  constructor(private service : JobService) { }\n\n  ngOnInit() {\n    this.service.getAll().subscribe(response => {\n      this.jobs = response\n    })\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 50%\\r\\n}\\r\\n\\r\\n.main-form{\\r\\n  background: #efefef;\\r\\n  padding: 10px;\\r\\n  border-radius: 10px;\\r\\n  margin-top: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.form-group{\\r\\n    margin-bottom: 30px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  width: 60%\\r\\n}\\r\\n\\r\\nh3{\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"main-form\\\">\\n    <h3>Login Form</h3>\\n    <form [formGroup]=\\\"form\\\" id=\\\"Login\\\" method=\\\"post\\\">\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"email\\\">\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && email.invalid\\\">\\n                  <div *ngIf=\\\"email.errors.required\\\">email is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.touched && password.invalid\\\">\\n                  <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn btn-success\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"Onsubmit()\\\">Login</button>\\n    </form>\\n    <div class=\\\"register\\\">\\n      <a  [routerLink]=\\\"['/register']\\\">Register now </a>\\n  </div>\\n\\n  </div>\\n\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  form: FormGroup\n  constructor(formBuilder: FormBuilder, private service: LoginService) {\n    this.form = formBuilder.group({\n      email: ['',Validators.required],\n      password: ['',Validators.required]\n    })\n  }\n\n  get email(){\n    return this.form.get('email')\n  }\n\n  get password(){\n    return this.form.get('password')\n  }\n\n  Onsubmit(){\n    let formattedData = this.formatLoginData(this.form.value)\n    // console.log(formattedData)\n    this.service.tryLogging(formattedData)\n  }\n\n\n  formatLoginData(inputData: JSON){\n    let pass = inputData[\"password\"]\n    delete inputData[\"password\"]\n    inputData[\"credential\"] = {\n      \"password\": pass\n    }\n    return inputData\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"home\\\">HRMS</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"applicant\\\" routerLinkActive=\\\"active\\\">Applicant</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"jobs\\\" routerLinkActive=\\\"active\\\">Jobs</a>\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <button class=\\\"btn btn-success\\\" routerLink=\\\"login\\\" *ngIf=\\\"!loggedIn\\\" >Login</button>\\n      <button class=\\\"btn btn-danger\\\" routerLink=\\\"login\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"https://github.com/l0c4lh0s7/hrms\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n      </a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-twitter\\\"></i>\\n      </a> \\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-medium\\\"></i>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent  {\n\n  loggedIn : any\n  isAdmin : boolean\n  constructor(loginService: LoginService, private router: Router) {\n    this.loggedIn = loginService.loggedIn()\n    this.isAdmin = loginService.loggedInAsAdmin()\n  }\n\n  onLogout(){\n    localStorage.removeItem('token')\n    window.location.href = \"\"\n    this.router.navigate([''])\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>You are not allowed to access this area </h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-allowed',\n  templateUrl: './not-allowed.component.html',\n  styleUrls: ['./not-allowed.component.css']\n})\nexport class NotAllowedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>You are not logged in</h1>\\n<h3> please login first </h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-logged-in',\n  templateUrl: './not-logged-in.component.html',\n  styleUrls: ['./not-logged-in.component.css']\n})\nexport class NotLoggedInComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>This link is not mapped yet !!!</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 60%\\r\\n}\\r\\n\\r\\n.main-form{\\r\\n  background: #efefef;\\r\\n  padding: 10px;\\r\\n  border-radius: 10px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form-group{\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.center{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nh3{\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h3> Registration Form </h3>\\r\\n  <div class=\\\"main-form\\\">\\r\\n    <form [formGroup]=\\\"registrationForm\\\"  (ngSubmit) = \\\"onSubmit()\\\" method=\\\"post\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">First Name: </label>\\r\\n      <input  type=\\\"text\\\"\\r\\n              name=\\\"firstName\\\"\\r\\n              id=\\\"firstName\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"firstName\\\"\\r\\n              placeholder=\\\"First name\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"firstName.touched && firstName.invalid\\\">\\r\\n        <div *ngIf=\\\"firstName.errors.required\\\">firstName is a required Field</div>\\r\\n        <div *ngIf=\\\"firstName.errors.cannotContainSpace\\\">firstName cannot contain space </div>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"lastName\\\">last Name: </label>\\r\\n      <input  type=\\\"text\\\"\\r\\n              name=\\\"lastName\\\"\\r\\n              id=\\\"lastName\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"lastName\\\"\\r\\n              placeholder=\\\"last name\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"lastName.touched && lastName.invalid\\\">\\r\\n        <div *ngIf=\\\"lastName.errors.required\\\">lastName is a required Field</div>\\r\\n        <div *ngIf=\\\"lastName.errors.cannotContainSpace\\\">lastName cannot contain space </div>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"qualification\\\">Qualification: </label>\\r\\n      <input  type=\\\"text\\\"\\r\\n              name=\\\"qualification\\\"\\r\\n              id=\\\"qualification\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"qualification\\\"\\r\\n              placeholder=\\\"qualification\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"qualification.touched && qualification.invalid\\\">\\r\\n                <div *ngIf=\\\"qualification.errors.required\\\">Qualification is a required Field</div>\\r\\n              </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Email: </label>\\r\\n      <input  type=\\\"text\\\"\\r\\n              name=\\\"email\\\"\\r\\n              id=\\\"email\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"Email\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && email.invalid\\\">\\r\\n                <div *ngIf=\\\"email.errors.required\\\">Email is a required Field</div>\\r\\n                <div *ngIf=\\\"email.errors.emailTaken\\\">This email is already registered, try loggin in </div>\\r\\n              </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"dob\\\">Date of Birth: </label>\\r\\n      <input  type=\\\"date\\\"\\r\\n              name=\\\"dob\\\"\\r\\n              id=\\\"dob\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"dob\\\"\\r\\n              placeholder=\\\"Date of Birth\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"dob.touched && dob.invalid\\\">\\r\\n                <div *ngIf=\\\"dob.errors.required\\\">Dob is a required Field</div>\\r\\n              </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"experience\\\" min=\\\"0\\\" >Experience: </label>\\r\\n      <input  type=\\\"number\\\"\\r\\n              name=\\\"experience\\\"\\r\\n              id=\\\"experience\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"experience\\\"\\r\\n              placeholder=\\\"experience (years)\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"experience.touched && experience.invalid\\\">\\r\\n                <div *ngIf=\\\"experience.errors.required\\\">Experience is a required Field</div>\\r\\n                <div *ngIf=\\\"experience.errors.min\\\">Must be a positive value</div>\\r\\n              </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"password\\\" >Password: </label>\\r\\n      <input  type=\\\"password\\\"\\r\\n              name=\\\"password\\\"\\r\\n              id=\\\"password\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              minlength=\\\"8\\\"\\r\\n              formControlName=\\\"password\\\"\\r\\n              placeholder=\\\"Password\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.touched && password.invalid\\\">\\r\\n                <div *ngIf=\\\"password.errors.required\\\">Password is a required Field</div>\\r\\n                <div *ngIf=\\\"password.errors.cannotContainSpace\\\">password cannot contain space </div>\\r\\n                <div *ngIf=\\\"password.errors.minlength\\\">Must be atleast of 8 characters </div>\\r\\n                <div *ngIf=\\\"password.errors.pattern\\\">Password contains only alphabets, numbers and _ @ ! only and no special characters </div>\\r\\n              </div>\\r\\n      </div>\\r\\n      <div class=\\\"center\\\">\\r\\n        <button class=\\\"btn btn-primary \\\" [disabled]=\\\"registrationForm.invalid\\\" > submit </button>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { RegisterService } from '../service/register.service';\nimport { NameValidator } from '../commons/validators/name.validator';\nimport { CustomEmailValidator } from '../commons/validators/email.validator';\nimport { Router } from '../../../node_modules/@angular/router';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n\n  registrationForm: FormGroup\n\n  constructor(private loginService: LoginService, private router: Router, formBuilder: FormBuilder, private service: RegisterService, emailValidator: CustomEmailValidator) {\n    this.registrationForm = formBuilder.group({\n      firstName: ['',[ Validators.required, NameValidator.cannotContainSpace]],\n      lastName: ['', [Validators.required, NameValidator.cannotContainSpace]],\n      qualification: ['', Validators.required],\n      email:  ['',   Validators.required, emailValidator.emailTaken.bind(emailValidator)],\n      dob:  ['', Validators.required],\n      experience: ['', [Validators.required, Validators.min(0)]],\n      password: ['', [Validators.required, NameValidator.cannotContainSpace, Validators.minLength(8), Validators.pattern(\"([a-zA-Z0-9_@!]*)\")]]\n    })\n  }\n\n\n  onSubmit(){\n    let data = this.formatInputData(this.registrationForm.value)\n    this.service.create(data).subscribe()\n    this.loginService.tryLogging(data)\n  }\n\n  formatInputData(inputData: JSON): JSON{\n    let password: string\n    let name: string\n    name = inputData[\"firstName\"] + \" \" + inputData[\"lastName\"]\n    for( let key in inputData){\n      if (key === \"password\" || key === \"firstName\" || key === \"lastName\"){\n        password = inputData[key]\n        delete inputData[key]\n      }\n    }\n    inputData[\"credential\"] = {\n      \"password\" : password\n    }\n    inputData[\"name\"] = name\n    return inputData\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName')\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName')\n  }\n\n  get qualification(){\n    return this.registrationForm.get('qualification')\n  }\n\n  get email(){\n    return this.registrationForm.get('email')\n  }\n\n  get dob(){\n    return this.registrationForm.get('dob')\n  }\n\n  get experience(){\n    return this.registrationForm.get('experience')\n  }\n\n  get password(){\n    return this.registrationForm.get('password')\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthAccessService implements CanActivate{\r\n\r\n  constructor(private loginService: LoginService,\r\n              private router: Router) { }\r\n\r\n  canActivate() : boolean {\r\n    if( this.loginService.loggedIn() )\r\n      return true;\r\n    else{\r\n      this.router.navigate(['/notLoggedIn'])\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"../../../node_modules/@angular/common/http\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { Injectable } from \"../../../node_modules/@angular/core\";\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor{\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let username=\"admin@admin.com\"\r\n    let password = \"admin\"\r\n    request = request.clone({\r\n      setHeaders:{\r\n        Authorization:  'Basic ' + btoa(username + ':' + password)\r\n      }\r\n    })\r\n    return next.handle(request)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { DataService } from './data.service';\n// import { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicantService extends DataService {\n\n  constructor(http: HttpClient) {\n    super( \"http://localhost:8080/user\", http)\n   }\n\n  getAppliedJobs(userId: number){\n    return this.http.get(this.url + \"/\" + userId + '/applied' )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private loginService: LoginService,\n              private router: Router) { }\n\n  canActivate() : boolean {\n    if( this.loginService.loggedInAsAdmin() )\n      return true;\n    else{\n      this.router.navigate(['/notallowed'])\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { BadInputError } from '../commons/errors/bad-input';\nimport { throwError } from 'rxjs';\nimport { AppError } from '../commons/errors/app-error';\nimport { NotFoundError } from '../commons/errors/not-found-error';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(public url: string, public http: HttpClient) { }\n\n  getAll(url?:string){\n    let link = url? url: this.url \n    return this.http.get(link)\n      .pipe(\n              map((response: Response)=> response),\n              catchError(this.handleError)\n            )\n  }\n\n  delete(resource){\n    console.log(\" value : \" + this.url + '/remove/' + resource)\n    return this.http.delete(this.url + '/remove/' + resource).pipe(\n      map((response: Response) => response) ,\n      catchError(this.handleError))\n  }\n\n  update(resource){\n    return this.http.patch(this.url + '/' + resource.id,\n     JSON.stringify({isRead:true}))\n    .pipe(map((response: Response) => response.json()) ,\n    catchError(this.handleError))\n    // this.http.put(this.url, JSON.stringify(resource))\n  }\n\n  create(resource){\n    return this.http.post(this.url, resource).pipe(\n      map((response: Response) => response.json()) ,\n      catchError(this.handleError))\n  }\n\n\n  private handleError(error: Response){\n    if(error.status === 400)\n      return throwError(new BadInputError(error))\n    if( error.status === 404 )\n      return throwError(new NotFoundError())\n    else\n      return throwError(new AppError(error))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService extends DataService{\n\n  constructor(http: HttpClient) {\n      super(\"http://localhost:8080/job\", http)\n  }\n\n  getAppliedCandidates(jobId: number){\n    return this.http.get(this.url + \"/\" + jobId + '/applied' )\n  }\n\n  createJob(resource){\n    return this.http.post(this.url + \"/create\", resource)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as JWT from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService{\n\n  url = \"http://localhost:8080/login\"\n  constructor(private http: HttpClient) {\n  }\n\n  tryLogging(credential){\n    return this.http.post(this.url, credential, {responseType: 'text', observe: 'response'})\n      .subscribe(response=>{\n        console.log('logging started ')\n        const token = response.headers.get('Authorization')\n        localStorage.setItem('token', token)\n        this.reload()\n        return response\n      },\n    error=>{\n      console.log(error)\n      return error\n    })\n  }\n\n  private reload(){\n    window.location.href=\"\"\n  }\n\n  loggedIn(): boolean{\n    return !!this.getToken()\n  }\n\n  loggedInAsAdmin(): boolean{\n    let token: Token\n    try{\n    token = JWT(this.getToken())\n    }\n    catch(InvalidTokenError){\n      console.log(\"Token is not present\")\n      return false;\n    }\n    return token.admin\n  }\n\n  getToken(){\n    return localStorage.getItem('token')\n  }\n\n  decodedToken(): Token{\n    try{\n    return JWT(this.getToken())\n  }catch(InvalidTokenError){\n    return null\n  }\n  }\n\n}\n\nexport interface Token {\n   admin:boolean,\n   subject:string,\n   name: string\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService extends DataService{\n  constructor(http: HttpClient) {\n    super('http://localhost:8080/user/register', http);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends DataService{\n  url = \"http://localhost:8080/user\"\n  constructor(http: HttpClient) { \n    super(\"http://localhost:8080/user\",http)\n  }\n\n    createUser(resource){\n      return this.http.post(this.url + '/register', resource)\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '../../../node_modules/@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n  valid\n  constructor(private http: HttpClient) { }\n\n  findByEmail(url: string,email: string):boolean{\n    this.http.get<boolean>(url + \"?email=\" + email)\n      .subscribe(response =>{\n        this.valid = response\n         return response;\n      })\n      return this.valid\n    //   console.log('after subscribe ' + this.valid)\n    // return this.valid\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row m-y-2\\\">\\n        <!-- edit form column -->\\n        <div class=\\\"col-lg-10 text-lg-center\\\">\\n            <h2>User Details</h2>\\n        </div> \\n        <!-- <div class=\\\"col-lg-8\\\" *ngIf=\\\"!job?.active\\\">\\n            <div class=\\\"alert alert-danger alert-dismissable\\\"> <a class=\\\"panel-close close\\\" data-dismiss=\\\"alert\\\">×</a>\\n                <strong>Important </strong>This job is not active ..\\n            </div>\\n        </div> -->\\n        <div class=\\\"col-lg-10\\\">\\n            <form role=\\\"form\\\" [formGroup]=\\\"userEditForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Name</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"user.name\\\" formControlName=\\\"name\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Email</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"email\\\" [value]=\\\"user.email\\\" formControlName=\\\"email\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">DOB</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"date\\\" [value]=\\\"user.dob\\\" formControlName=\\\"dob\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Experience</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [value]=\\\"user.experience\\\" formControlName=\\\"experience\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\">Admin</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio1\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio1\\\" name=\\\"isAdmin\\\" value=\\\"true\\\"\\n                                    formControlName=\\\"isAdmin\\\" [checked]=\\\"user.isAdmin\\\">Yes\\n                            </label>\\n                        </div>\\n                        <div class=\\\"form-check-inline\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"radio2\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"radio2\\\" name=\\\"isAdmin\\\" value=\\\"false\\\"\\n                                    formControlName=\\\"isAdmin\\\" [checked]=\\\"!user.isAdmin\\\">No\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-lg-3 col-form-label form-control-label\\\"></label>\\n                    <div class=\\\"col-lg-9\\\">\\n                        <Button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\" style=\\\"margin: 10px\\\">Cancel</Button>\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Save Changes\\\" style=\\\"margin: 10px\\\">\\n                        <i class=\\\"fa fa-check\\\" style=\\\"color: green\\\" *ngIf=\\\"changesSaved\\\">Values Updated</i>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n<hr />\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApplicantService } from '../service/applicant.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { USER } from '../commons/interfaces/interfaces';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  url\n  user: USER\n  userEditForm: FormGroup\n  constructor(private route: ActivatedRoute, private applicantService: ApplicantService, formBuilder: FormBuilder) { \n    this.route.params.subscribe( params => {\n      this.url = 'http://localhost:8080/user/' + params.id      \n      this.applicantService.getAll(this.url).subscribe(response=>{\n        \n        this.user = response as any as USER\n        this.userEditForm = formBuilder.group({\n          // credential : [this.user.credential],\n          qualification:  [this.user.qualification],\n          id: [this.user.id],\n          name: [this.user.name],\n          email:  [this.user.email],\n          dob:  [this.user.dob],\n          experience: [this.user.experience],\n          applied_to_id : [this.user.applied_to_id],\n          status_id: [this.user.status_id],\n          isAdmin: [this.user.isAdmin]\n        })\n      })\n    })\n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}